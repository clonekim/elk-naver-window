{"version":3,"sources":["components/ErrorPanel.js","components/Panel.js","components/ItemList.js","hook/useAgent.js","App.js","reportWebVitals.js","index.js"],"names":["ErrorPanel","errors","clearError","Alert","variant","onClose","dismissible","Heading","map","i","key","message","Panel","sendTrigger","setErrors","setItems","socketStatus","useState","buffer","setBuffer","maxitem","setMaxItem","menuid","setMenuId","Form","onSubmit","event","preventDefault","validations","isNaN","push","length","then","console","log","Row","Col","Group","Label","Control","type","onChange","e","target","value","as","sm","Button","onClick","className","html","__html","substr","ItemCard","item","Card","Img","src","images","_","head","JSON","parse","Body","Title","name","pc_discount_price","Subtitle","naver_category","style_name","Text","dangerouslySetInnerHTML","content_text","view_count_from_window","tags","ItemList","items","chunks","chunk","list","useAgent","params","a","axios","post","Object","assign","command","res","data","catch","err","response","App","setSocketStatus","useWebSocket","onOpen","onMessage","status","concat","shouldReconnect","lastMessage","Navbar","bg","Brand","Container","fluid","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yNAqBeA,MAnBf,YAA8C,IAAvBC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,WAE7B,OAAGD,EAGC,eAACE,EAAA,EAAD,CAAOC,QAAQ,SAASC,QAAS,kBAAMH,KAAcI,aAAW,EAAhE,UACI,cAACH,EAAA,EAAMI,QAAP,oBACE,6BACIN,EAAOO,KAAI,SAAAC,GAAC,OAAI,+BAAkBA,EAAEC,IAApB,KAA2BD,EAAEE,QAA7B,MAASF,EAAEC,aAMhC,M,gCCkEIE,MA/Ef,YAAmE,IAAnDC,EAAkD,EAAlDA,YAAaC,EAAqC,EAArCA,UAAWC,EAA0B,EAA1BA,SAAUC,EAAgB,EAAhBA,aAAgB,EAEpCC,mBAAS,IAF2B,mBAEzDC,EAFyD,KAEjDC,EAFiD,OAGlCF,mBAAS,IAHyB,mBAGzDG,EAHyD,KAGhDC,EAHgD,OAIpCJ,mBAAS,IAJ2B,mBAIzDK,EAJyD,KAIjDC,EAJiD,KAgChE,OACE,eAACC,EAAA,EAAD,CAAMC,SA3Bc,SAAAC,GACpBA,EAAMC,iBAEN,IAAMC,EAAc,GAEhBV,IAAUW,MAAMX,IAClBU,EAAYE,KAAK,CAACpB,IAAK,SAAUC,QAAS,wEAExCS,IAAWS,MAAMT,IACnBQ,EAAYE,KAAK,CAACpB,IAAK,UAAWC,QAAS,yGAEzCW,GACFM,EAAYE,KAAK,CAACpB,IAAK,SAAUC,QAAS,sDAEzCiB,EAAYG,OAAS,EACtBjB,EAAUc,GAIZf,EAAY,CAACK,SAAQE,UAASE,WAASU,MAAK,WAC1CC,QAAQC,IAAI,UAOd,UACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,eAACZ,EAAA,EAAKa,MAAN,WACE,cAACb,EAAA,EAAKc,MAAN,qBACA,cAACd,EAAA,EAAKe,QAAN,CAAcC,KAAK,OAAQC,SAAU,SAAAC,GAAC,OAAIvB,EAAUuB,EAAEC,OAAOC,QAAQA,MAAO1B,SAIhF,cAACkB,EAAA,EAAD,UACE,eAACZ,EAAA,EAAKa,MAAN,WACE,cAACb,EAAA,EAAKc,MAAN,wBACA,cAACd,EAAA,EAAKe,QAAN,CAAcC,KAAK,OAAOC,SAAU,SAAAC,GAAC,OAAIrB,EAAWqB,EAAEC,OAAOC,QAAQA,MAAOxB,SAIhF,cAACgB,EAAA,EAAD,UACE,eAACZ,EAAA,EAAKa,MAAN,WACE,cAACb,EAAA,EAAKc,MAAN,sBACA,eAACd,EAAA,EAAKe,QAAN,CAAcM,GAAG,SAASJ,SAAU,SAAAC,GAAC,OAAInB,EAAUmB,EAAEC,OAAOC,QAAQA,MAAOtB,EAA3E,UACE,2BACA,wBAAQsB,MAAM,WAAd,0BACA,wBAAQA,MAAM,WAAd,0BACA,wBAAQA,MAAM,WAAd,gCACA,wBAAQA,MAAM,WAAd,2CAMR,cAACT,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAKU,GAAG,KAAR,UACE,cAACC,EAAA,EAAD,CAAQP,KAAK,SAASpC,QAAQ,UAA9B,kBADF,QAEE,cAAC2C,EAAA,EAAD,CAAQ3C,QAAQ,YAAY4C,QAAS,kBAAMjC,EAAS,KAApD,0BACA,qBAAKkC,UAAU,cAAf,SACGjC,a,iCCnEPkC,EAAO,SAAAN,GACX,MAAO,CAACO,OAAQP,EAAMQ,OAAO,EAAG,OAO5BC,EAAW,SAAAC,GAEf,OACE,eAACC,EAAA,EAAD,WACE,cAACA,EAAA,EAAKC,IAAN,CAAUpD,QAAQ,MAAMqD,KARbb,EAQ2BU,EAAKI,OAPxCC,IAAEC,KAAKC,KAAKC,MAAMlB,OASrB,eAACW,EAAA,EAAKQ,KAAN,WACE,eAACR,EAAA,EAAKS,MAAN,WAAaV,EAAKW,KAAlB,IAAyBX,EAAKY,kBAA9B,OACA,eAACX,EAAA,EAAKY,SAAN,eAAiBb,EAAKc,eAAtB,IAAuCd,EAAKe,WAA5C,OACA,cAACd,EAAA,EAAKe,KAAN,CAAWC,wBAAyBrB,EAAKI,EAAKkB,gBAC9C,eAACjB,EAAA,EAAKY,SAAN,WAAe,yCAAYb,EAAKmB,0BAA2B,uBAAK,qCAAhE,KAA8EnB,EAAKoB,KAAnF,aAdS,IAAA9B,GAqCF+B,MAhBf,YAA4B,IAATC,EAAQ,EAARA,MAEXC,EAASlB,IAAEmB,MAAMF,EAAO,GAE9B,OACE,mCACGC,EAAOrE,KAAI,SAAAuE,GAAI,OACd,cAAC5C,EAAA,EAAD,UACG4C,EAAKvE,KAAI,SAAAC,GAAC,OAAI,cAAC2B,EAAA,EAAD,CAAKU,GAAG,IAAR,SAAY,cAAC,EAAD,eAAcrC,iB,kDCDpCuE,MAhCf,WAAqB,IAAD,EAEQ/D,mBAAS,IAFjB,mBAEX2D,EAFW,KAEJ7D,EAFI,OAGWE,mBAAS,MAHpB,mBAGXhB,EAHW,KAGHa,EAHG,KAKZD,EAAW,uCAAG,WAAMoE,GAAN,SAAAC,EAAA,sEACKC,IAAMC,KAAK,WAAYC,OAAOC,OAAOL,EAAQ,CAACM,QAAS,aACjDvD,MAAK,SAAAwD,GAGJ,OAFAzE,EAAS,IACTD,EAAU,MACH0E,EAAIC,QACVC,OAAM,SAAAC,GACP1D,QAAQC,IAAIyD,GACZ7E,EAAU,GAAD,mBAAKb,GAAQ,IAAb,CAAiB,CAACS,IAAK,SAAUC,QAASgF,EAAIC,SAASH,KAAK9E,eARjF,yDAAH,sDAgBjB,MAAO,CACLiE,QACA7D,WACAd,SACAa,YACAZ,WARiB,kBAAMY,EAAU,OASjCD,gB,sBCeWgF,MArCf,WACE,IADa,EAG4B5E,mBAAS,MAHrC,mBAGND,EAHM,KAGQ8E,EAHR,OAI4Dd,IAAjEJ,EAJK,EAILA,MAAO7D,EAJF,EAIEA,SAAWF,EAJb,EAIaA,YAAaZ,EAJ1B,EAI0BA,OAAQa,EAJlC,EAIkCA,UAAWZ,EAJ7C,EAI6CA,WAiB1D,OAfuB6F,IALX,6BAK6B,CACvCC,OAAQ,kBAAMF,EAAgB,qBAC9BG,UAAW,SAAEvE,GAEX,GAAGA,EAAM+D,KAAM,CACb,IAAMA,EAAO5B,KAAKC,MAAMpC,EAAM+D,MAE1BA,EAAKS,QACPnF,EAAS6D,EAAMuB,OAAQV,EAAKA,SAGlCW,gBAAiB,SAAC1D,GAAD,OAAO,KAXnB2D,YAgBH,qCACE,cAACC,EAAA,EAAD,CAAQC,GAAG,QAAX,SACE,cAACD,EAAA,EAAOE,MAAR,6BAGF,eAACC,EAAA,EAAD,CAAWC,MAAM,KAAjB,UACE,cAAC,EAAD,CAAYzG,OAAQA,EAAQC,WAAYA,IACxC,cAAC,EAAD,CAAOW,YAAaA,EAAaC,UAAWA,EAAYC,SAAUA,EAAUC,aAAcA,IAC1F,cAAC,EAAD,CAAU4D,MAAOA,WC3BZ+B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB7E,MAAK,YAAkD,IAA/C8E,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.981619e6.chunk.js","sourcesContent":["import { Alert , Button } from 'react-bootstrap';\n\nfunction ErrorPanel ({ errors, clearError }) {\n\n  if(errors) {\n\n    return (\n      <Alert variant=\"danger\" onClose={() => clearError()} dismissible>\n          <Alert.Heading>Error</Alert.Heading>\n            <ul>\n              { errors.map(i => <li key={i.key} >{i.key}: {i.message} </li>) }\n            </ul>\n        </Alert>\n    );\n\n  }else {\n    return null;\n  }\n}\n\n\nexport default ErrorPanel;\n","import React, { useState } from 'react';\nimport { Modal, Form, Button, Col, Row } from 'react-bootstrap';\n\nfunction Panel({sendTrigger, setErrors, setItems, socketStatus }) {\n\n  const [buffer, setBuffer] = useState('');\n  const [maxitem, setMaxItem] = useState('');\n  const [menuid, setMenuId] = useState('');\n\n  const submitHandler = event => {\n    event.preventDefault();\n\n    const validations = [];\n\n    if(!buffer || isNaN(buffer))\n      validations.push({key: 'buffer', message: '버퍼사이즈를 입력하세요'});\n\n    if(!maxitem || isNaN(maxitem))\n      validations.push({key: 'maxitem', message: '수집할 아이템의 총 개수를 입력하세요'});\n\n    if(!menuid)\n      validations.push({key: 'menuid', message: '메뉴를 선택하세요'});\n\n    if(validations.length > 0) {\n      setErrors(validations)\n      return\n    }\n\n    sendTrigger({buffer, maxitem, menuid}).then(() => {\n      console.log('ok')\n    })\n\n  };\n\n\n  return (\n    <Form onSubmit={submitHandler}>\n      <Row>\n        <Col>\n          <Form.Group>\n            <Form.Label>Buffer</Form.Label>\n            <Form.Control type=\"text\"  onChange={e => setBuffer(e.target.value)} value={buffer}/>\n          </Form.Group>\n        </Col>\n\n        <Col>\n          <Form.Group>\n            <Form.Label>Max Items</Form.Label>\n            <Form.Control type=\"text\" onChange={e => setMaxItem(e.target.value)} value={maxitem}/>\n          </Form.Group>\n        </Col>\n\n        <Col>\n          <Form.Group>\n            <Form.Label>Menu ID</Form.Label>\n            <Form.Control as=\"select\" onChange={e => setMenuId(e.target.value)} value={menuid}>\n              <option></option>\n              <option value=\"10000531\">여성</option>\n              <option value=\"10000623\">남성</option>\n              <option value=\"10000694\">수제화</option>\n              <option value=\"10010073\">주얼리</option>\n            </Form.Control>\n          </Form.Group>\n        </Col>\n      </Row>\n\n      <Row>\n        <Col sm=\"12\">\n          <Button type=\"submit\" variant=\"primary\">Send</Button> &nbsp;\n          <Button variant=\"secondary\" onClick={() => setItems([]) }>Reset result</Button>\n          <div className=\"float-right\">\n            {socketStatus}\n          </div>\n        </Col>\n      </Row>\n    </Form>\n\n  );\n\n}\n\n\nexport default Panel;\n","import React, { useState } from 'react';\nimport { Card, Row, Col } from 'react-bootstrap';\nimport _ from 'lodash';\n\nconst html = value => {\n  return {__html: value.substr(0, 100)};\n}\n\nconst firstImg = value => {\n  return _.head(JSON.parse(value));\n}\n\nconst ItemCard = item => {\n\n  return (\n    <Card>\n      <Card.Img variant=\"top\" src={firstImg(item.images)} />\n\n      <Card.Body>\n        <Card.Title>{item.name} {item.pc_discount_price} </Card.Title>\n        <Card.Subtitle> {item.naver_category}/{item.style_name} </Card.Subtitle>\n        <Card.Text dangerouslySetInnerHTML={html(item.content_text)}/>\n        <Card.Subtitle><b> visit: {item.view_count_from_window}</b><br/><b>tags</b>: {item.tags} </Card.Subtitle>\n      </Card.Body>\n    </Card>\n  );\n\n};\n\nfunction ItemList({items}) {\n\n  const chunks = _.chunk(items, 4);\n\n  return (\n    <>\n      {chunks.map(list =>\n        <Row>\n          {list.map(i => <Col sm=\"3\"><ItemCard {...i} /></Col>)}\n        </Row>\n      )}\n    </>\n  );\n\n};\n\nexport default ItemList;\n","import { useState } from 'react';\nimport axios from 'axios'\n\n\nfunction useAgent() {\n\n  const [items, setItems] = useState([]);\n  const [errors, setErrors ] = useState(null);\n\n  const sendTrigger = async params => {\n    const response = await axios.post('/trigger', Object.assign(params, {command: 'collect'}))\n                                .then(res => {\n                                  setItems([]);\n                                  setErrors(null);\n                                  return res.data;\n                                }).catch(err => {\n                                  console.log(err);\n                                  setErrors([...errors||[], {key: 'server', message: err.response.data.message }]);\n                                });\n  }\n\n\n  const clearError = () => setErrors(null);\n\n\n  return {\n    items,\n    setItems,\n    errors,\n    setErrors,\n    clearError,\n    sendTrigger\n  }\n};\n\n\nexport default useAgent;\n","import { useState } from 'react';\nimport useWebSocket from 'react-use-websocket';\nimport ErrorPanel from './components/ErrorPanel';\nimport Panel from './components/Panel';\nimport ItemList from './components/ItemList';\nimport useAgent from './hook/useAgent';\nimport { Container, Navbar } from 'react-bootstrap';\nimport './Bootstrap.scss';\n\nfunction App() {\n  const url = 'ws://localhost:8000/socket';\n\n  const [socketStatus, setSocketStatus ] = useState(null);\n  const { items, setItems,  sendTrigger, errors, setErrors, clearError } = useAgent();\n\n  const {lastMessage } = useWebSocket(url, {\n    onOpen: () => setSocketStatus('server connected'),\n    onMessage: ( event) => {\n\n      if(event.data) {\n        const data = JSON.parse(event.data);\n\n        if(!data.status)\n          setItems(items.concat( data.data ));\n      }\n    },\n    shouldReconnect: (e) => true\n  })\n\n\n  return (\n      <>\n        <Navbar bg=\"light\">\n          <Navbar.Brand> Agent Front</Navbar.Brand>\n        </Navbar>\n\n        <Container fluid=\"md\">\n          <ErrorPanel errors={errors} clearError={clearError} />\n          <Panel sendTrigger={sendTrigger} setErrors={setErrors}  setItems={setItems} socketStatus={socketStatus} />\n          <ItemList items={items}/>\n        </Container>\n      </>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}